name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  code-quality:
    name: Code Quality & Linting
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: TypeScript type checking
      run: npm run type-check
      
    - name: ESLint
      run: npm run lint
      
    - name: Prettier format check
      run: npm run format:check
      
    - name: Check for security vulnerabilities
      run: npm audit --audit-level moderate

  build-verification:
    name: Build Verification
    runs-on: ubuntu-latest
    needs: code-quality
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Setup Expo CLI
      run: npm install -g @expo/cli
      
    - name: Verify Expo configuration
      run: npx expo doctor
      
    - name: Build for web
      run: npm run build:web
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: web-build
        path: dist/

  mobile-build:
    name: Mobile Build Verification
    runs-on: macos-latest
    needs: code-quality
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Setup Expo CLI
      run: npm install -g @expo/cli
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Build Android
      run: |
        npx expo prebuild --platform android
        cd android && ./gradlew assembleDebug
        
    - name: Upload Android APK
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: android/app/build/outputs/apk/debug/

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: code-quality
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level high
      
    - name: Check for known vulnerabilities
      run: npx audit-ci --moderate

  performance-check:
    name: Performance Check
    runs-on: ubuntu-latest
    needs: code-quality
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Bundle size analysis
      run: |
        npx expo export --platform web
        echo "Bundle size analysis:"
        du -sh dist/
        
    - name: Check bundle size
      run: |
        BUNDLE_SIZE=$(du -s dist/ | cut -f1)
        if [ $BUNDLE_SIZE -gt 50000 ]; then
          echo "Bundle size is too large: ${BUNDLE_SIZE}KB"
          exit 1
        else
          echo "Bundle size is acceptable: ${BUNDLE_SIZE}KB"
        fi
